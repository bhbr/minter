import { equalObjectsAreEqual } from 'core/functions/_tests/copying_tests'

import {
	Every_property_has_a_mutability,
	Every_property_has_a_default_value,

	A_mutable_property_can_be_changed_after_object_creation,
	A_mutable_property_will_be_changed_properly_after_object_creation,
	An_initializable_property_cannot_be_changed_after_object_creation,
	A_subclassable_property_cannot_be_changed_after_object_creation,
	An_immutable_property_cannot_be_changed_after_object_creation,

	A_mutable_property_can_be_changed_on_object_creation,
	A_mutable_property_will_be_changed_properly_on_object_creation,
	An_initializable_property_can_be_changed_on_object_creation,
	An_initializable_property_will_be_changed_properly_on_object_creation,
	A_subclassable_property_cannot_be_changed_on_object_creation,
	An_immutable_property_cannot_be_changed_on_object_creation,

	A_mutable_property_can_be_changed_in_subclass,
	A_mutable_property_will_be_changed_properly_in_subclass,
	An_initializable_property_can_be_changed_in_subclass,
	An_initializable_property_will_be_changed_properly_in_subclass,
	A_subclassable_property_can_be_changed_in_subclass,
	A_subclassable_property_will_be_changed_properly_in_subclass,
	An_immutable_property_cannot_be_changed_in_subclass,

	An_immutable_property_cannot_become_subclassable_in_subclass,
	An_immutable_property_cannot_become_initializable_in_subclass,
	An_immutable_property_cannot_become_mutable_in_subclass,
	A_subclassable_property_can_become_immutable_in_subclass,
	A_subclassable_property_can_become_immutable_and_have_a_new_default_value_in_subclass,
	A_subclassable_property_cannot_become_initializable_in_subclass,
	A_subclassable_property_cannot_become_mutable_in_subclass,
	An_initializable_property_can_become_immutable_in_subclass,
	An_initializable_property_can_become_immutable_and_have_a_new_default_value_in_subclass,
	An_initializable_property_can_become_subclassable_in_subclass,
	An_initializable_property_can_become_subclassable_and_have_a_new_default_value_in_subclass,
	An_initializable_property_cannot_become_mutable_in_subclass,
	A_mutable_property_can_become_immutable_in_subclass,
	A_mutable_property_can_become_immutable_and_have_a_new_default_value_in_subclass,
	A_mutable_property_can_become_immutable_and_have_a_new_default_value_in_subsubclass_1,
	A_mutable_property_can_become_immutable_and_have_a_new_default_value_in_subsubclass_2,
	A_mutable_property_can_become_subclassable_in_subclass,
	A_mutable_property_can_become_subclassable_and_have_a_new_default_value_in_subclass,
	A_mutable_property_can_become_initializable_in_subclass,
	A_mutable_property_can_become_initializable_and_have_a_new_default_value_in_subclass,

	A_mutable_property_can_be_updated,
	A_mutable_property_can_be_updated_to_the_correct_value,
	An_initializable_property_cannot_be_updated,
	A_subclassable_property_cannot_be_updated,
	An_immutable_property_cannot_be_updated,
	An_immutable_property_can_be_added_in_a_subclass

} from 'core/classes/_tests/ExtendedObject_tests'

import {
	A_vertex_is_close_to_itself,
	A_vertex_equals_itself
} from 'core/functions/_tests/vertex_tests'

import {
	A_transform_transforms_a_vertex_as_expected,
	The_identity_transform_leaves_a_vertex_unchanged,
	Even_an_identity_transform_with_nonzero_anchor_leaves_a_vertex_unchanged,
	Transforms_concatenate_properly,
	A_transform_s_inverse_undoes_the_transform,
	A_transform_times_its_inverse_equals_the_identity,
	A_transform_equals_itself,
	A_transform_s_inverse_s_inverse_is_the_original_transform,
	A_transform_s_determinant_is_computed_properly
} from 'core/classes/Transform/_tests/Transform_tests'

import {
	Anchors_of_nested_mobjects_transform_properly
} from 'core/mobjects/_tests/Mobject_tests'

function runTest(test: () => boolean) {
	let replacements = {
		"_s_": "'s_",
		"___": "_'_", 
		"_": " "
	}
	let testAssertion = test.name
	for (let [key, value] of Object.entries(replacements)) {
		testAssertion = testAssertion.replaceAll(key, value)
	}
	if (test()) {
		console.log(`%c PASSED: ${testAssertion} `, 'background-color: #070')
	} else {
		console.error(`FAILED: ${testAssertion}`)
	}
}



runTest(equalObjectsAreEqual)

// ExtendedObject tests

runTest(Every_property_has_a_mutability)
runTest(Every_property_has_a_default_value)

runTest(A_mutable_property_can_be_changed_after_object_creation)
runTest(A_mutable_property_will_be_changed_properly_after_object_creation)
runTest(An_initializable_property_cannot_be_changed_after_object_creation)
runTest(A_subclassable_property_cannot_be_changed_after_object_creation)
runTest(An_immutable_property_cannot_be_changed_after_object_creation)

runTest(A_mutable_property_can_be_changed_on_object_creation)
runTest(A_mutable_property_will_be_changed_properly_on_object_creation)
runTest(An_initializable_property_can_be_changed_on_object_creation)
runTest(An_initializable_property_will_be_changed_properly_on_object_creation)
runTest(A_subclassable_property_cannot_be_changed_on_object_creation)
runTest(An_immutable_property_cannot_be_changed_on_object_creation)

runTest(A_mutable_property_can_be_changed_in_subclass)
runTest(A_mutable_property_will_be_changed_properly_in_subclass)
runTest(An_initializable_property_can_be_changed_in_subclass)
runTest(An_initializable_property_will_be_changed_properly_in_subclass)
runTest(A_subclassable_property_can_be_changed_in_subclass)
runTest(A_subclassable_property_will_be_changed_properly_in_subclass)
runTest(An_immutable_property_cannot_be_changed_in_subclass)

runTest(An_immutable_property_cannot_become_subclassable_in_subclass)
runTest(An_immutable_property_cannot_become_initializable_in_subclass)
runTest(An_immutable_property_cannot_become_mutable_in_subclass)
runTest(A_subclassable_property_can_become_immutable_in_subclass)
runTest(A_subclassable_property_can_become_immutable_and_have_a_new_default_value_in_subclass)
runTest(A_subclassable_property_cannot_become_initializable_in_subclass)
runTest(A_subclassable_property_cannot_become_mutable_in_subclass)
runTest(An_initializable_property_can_become_immutable_in_subclass)
runTest(An_initializable_property_can_become_immutable_and_have_a_new_default_value_in_subclass)
runTest(An_initializable_property_can_become_subclassable_in_subclass)
runTest(An_initializable_property_can_become_subclassable_and_have_a_new_default_value_in_subclass)
runTest(An_initializable_property_cannot_become_mutable_in_subclass)
runTest(A_mutable_property_can_become_immutable_in_subclass)
runTest(A_mutable_property_can_become_immutable_and_have_a_new_default_value_in_subclass)
runTest(A_mutable_property_can_become_immutable_and_have_a_new_default_value_in_subsubclass_1)
runTest(A_mutable_property_can_become_immutable_and_have_a_new_default_value_in_subsubclass_2)
runTest(A_mutable_property_can_become_subclassable_in_subclass)
runTest(A_mutable_property_can_become_subclassable_and_have_a_new_default_value_in_subclass)
runTest(A_mutable_property_can_become_initializable_in_subclass)
runTest(A_mutable_property_can_become_initializable_and_have_a_new_default_value_in_subclass)

runTest(A_mutable_property_can_be_updated)
runTest(A_mutable_property_can_be_updated_to_the_correct_value)
runTest(An_initializable_property_cannot_be_updated)
runTest(A_subclassable_property_cannot_be_updated)
runTest(An_immutable_property_cannot_be_updated)
runTest(An_immutable_property_can_be_added_in_a_subclass)



// Vertex tests

runTest(A_vertex_is_close_to_itself)
runTest(A_vertex_equals_itself)



// Transform test

runTest(A_transform_transforms_a_vertex_as_expected)
runTest(The_identity_transform_leaves_a_vertex_unchanged)
runTest(Even_an_identity_transform_with_nonzero_anchor_leaves_a_vertex_unchanged)
runTest(Transforms_concatenate_properly)
runTest(A_transform_s_inverse_undoes_the_transform)
runTest(A_transform_times_its_inverse_equals_the_identity)
runTest(A_transform_equals_itself)
runTest(A_transform_s_inverse_s_inverse_is_the_original_transform)
runTest(A_transform_s_determinant_is_computed_properly)


// Mobject tests

runTest(Anchors_of_nested_mobjects_transform_properly)








